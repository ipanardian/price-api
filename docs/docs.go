// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/price": {
            "get": {
                "security": [
                    {
                        "ClientIdAuth": []
                    },
                    {
                        "ClientSignatureAuth": []
                    }
                ],
                "description": "Get price by ids",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Get price",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtoV1.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dtoV1.GetPriceResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtoV1.ResponseWrapper"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtoV1.GetPriceResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "price": {
                    "$ref": "#/definitions/frame.HermesPrice"
                }
            }
        },
        "dtoV1.ResponseWrapper": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "integer"
                },
                "status_code": {
                    "type": "string"
                },
                "status_message": {
                    "type": "string"
                },
                "status_number": {
                    "type": "string"
                },
                "ts": {
                    "type": "integer"
                }
            }
        },
        "frame.HermesPrice": {
            "type": "object",
            "properties": {
                "conf": {
                    "type": "number"
                },
                "expo": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "publish_time": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ClientIdAuth": {
            "type": "apiKey",
            "name": "X-Client-ID",
            "in": "header"
        },
        "ClientSignatureAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
